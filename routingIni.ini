[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories will be relative to this.
#inputDir = /storagetemp/niko/Global/rhineTest/standAlone/
inputDir = /Users/mschnorbus/Work/rhineTest/standAlone/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#cloneMap = /data/hydroworld/others/RhineMeuse/RhineMeuse30min.clone.map
#cloneMap = /data/hydroworld/others/RhineMeuse/RhineMeuse05min.clone.map
cloneMap = input/RhineMeuse_05min.map

# The area/landmask of interest:
landmask =input/RhineMeuse_05min.map
# If None, area/landmask is limited for cells with ldd value. 

# Set the output directory in an absolute path.
#~ outputDir = OUTPUTDIRECTORY
outputDir = /Users/mschnorbus/Work/rhineTest/standAlone/testRun/

# netcdf attributes for output files:
institution = CEE Princeton University, Utrecht University
title       = Output water temperature, dynamic routing model developed by N.Wanders
description = Niko Wanders (nwanders@princeton.edu, n.wanders@uu.nl)

startTime = 2001-01-01
endTime   = 2001-01-31
# Format: YYYY-MM-DD
# The model runs on the daily time step.

# spinning up options
maxSpinUpsInYears = 0
minConvForTotlSto = 0.5
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5

[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = meteo/precipitation_efas_rhine-meuse.nc
temperatureNC   = meteo/temperature_efas_rhine-meuse.nc
precipitationVarName = precipitation
precipitationCorrectionFactor=1.00

temperatureVarName = temperature

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Input
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
refETPotFileNC  = meteo/ReferencePotentialEvaporation_daily_Rhine_1990_to_2014.nc

evaporationVarName = potentialEvaporation

# Set the forcing cloudcover, radiation and vapor pressure files (relative to inputDir), needed for water temperature module
cloudcoverNC = /Users/mschnorbus/Work/rhineTest/standAlone/meteo/cru_ts3.21.cloudCover.nc
radiationNC   = /Users/mschnorbus/Work/rhineTest/standAlone/meteo/short_wave_radiation_monthly_climatology_30arcmin.nc
vaporNC   = /Users/mschnorbus/Work/rhineTest/standAlone/meteo/cru_ts3.21.vaporPressure.nc
annualAvgTNC   = /Users/mschnorbus/Work/rhineTest/standAlone/meteo/annual_avg_temperature_ERA-Interim_1979to2010.nc
sunhoursTable = /Users/mschnorbus/Work/rhineTest/standAlone/meteo/sunhoursfrac.tbl

[routingOptions]
debugWaterBalance = True

baseflowNC = /Users/mschnorbus/Work/rhineTest/standAlone/hydro/baseflow_dailyTot_output.nc
baseflowVarName = baseflow
interflowNC = /Users/mschnorbus/Work/rhineTest/standAlone/hydro/interflowTotal_dailyTot_output.nc
interflowVarName = interflow
directRunoffNC = /Users/mschnorbus/Work/rhineTest/standAlone/hydro/directRunoff_dailyTot_output.nc
directRunoffVarName = direct_runoff

lddMap      = input/lddsound_05min.map
cellAreaMap = input/cellsize05min.correct.map
gradient    = input/slope05min.map

# manning coefficient
manningsN   = 0.04

# constant channel width (optional)
constantChannelWidth = None

# minimum channel width (optional)
minimumChannelWidth  = None

# Options for floodplain routing module
relativeElevationFiles = /Users/mschnorbus/Work/rhineTest/standAlone/input/topoProperties5ArcMin.nc
relativeElevationLevels = 0.0,0.01,0.05,0.10,0.20,0.30,0.40,0.50,0.60,0.70,0.80,0.90,1.00

## Channel properties for flooding
maxChannelCapacity = input/channel_capacity.map
channelLength = input/channel_length.map
channelDepth = input/channel_depth.map
channelGradient = input/globalgradchannel.map
channelLDD = input/lddsound_05min.map

routingMethod = simplifiedKinematicWave
# Options are kinematicWave, simplifiedKinematicWave and accuTravelTime

# Option for flood plain simulation
dynamicFloodPlain = True

# Smoothing options for floodplain PDF
reductionKK = 0.5
criterionKK = 40.0

## manning coefficient for floodplain
floodplainManningsN= 0.10

# Option for water temperature modelling
waterTemperature = True
routingOnly = True
# option for maximum length of a sub time step in seconds (optional and only used if kinematicWave is used)
# - Note that too long sub time step may create water balance errors.
# - Default values: 3600 seconds for 30 arcmin ; 720 seconds for 5 arcmin
#maxiumLengthOfSubTimeStep = 3600.
maxiumLengthOfSubTimeStep = 720.

# lake and reservoir parameters
waterBodyInputNC = input/waterBodies5ArcMin.nc
onlyNaturalWaterBodies = False

# composite crop factors for WaterBodies:
cropCoefficientWaterNC = input/cropCoefficientForOpenWater.nc
minCropWaterKC         = 0.20

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
timestepsToAvgDischargeIni     = states/timestepsToAvgDischarge_2001-12-31.map
# Note that:
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

# initial conditions:
waterBodyStorageIni            = states/waterBodyStorage_2001-12-31.map
channelStorageIni              = states/channelStorage_2001-12-31.map
readAvlChannelStorageIni       = states/readAvlChannelStorage_2001-12-31.map
avgDischargeLongIni            = states/avgDischargeLong_2001-12-31.map
m2tDischargeLongIni            = states/m2tDischargeLong_2001-12-31.map
avgBaseflowLongIni             = states/avgBaseflowLong_2001-12-31.map
riverbedExchangeIni            = states/riverbedExchange_2001-12-31.map
avgLakeReservoirInflowShortIni = states/avgLakeReservoirInflowShort_2001-12-31.map
avgLakeReservoirOutflowLongIni = states/avgLakeReservoirOutflowLong_2001-12-31.map
#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                = states/subDischarge_2001-12-31.map
#
# other initial conditions (optional):
avgDischargeShortIni           = states/avgDischargeShort_2001-12-31.map
#
# water temperature initial conditions (optional):
waterTemperatureIni           = states/waterTemperature_2001-12-31.map
iceThicknessIni               = states/iceThickness_2001-12-31.map

[reportingOptions]
# output files that will be written in the disk in netcdf files:
outDailyTotNC = discharge,dynamicFracWat,waterTemp,channelStorage,waterHeight,iceThickness
outMonthTotNC = None
outMonthAvgNC = None
outMonthEndNC = None
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None
